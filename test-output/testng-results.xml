<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="0" total="3" passed="1">
  <reporter-output>
    <line>
      <![CDATA[method3]]>
    </line>
  </reporter-output>
  <suite name="Default suite" duration-ms="125" started-at="2018-11-17T03:15:01Z" finished-at="2018-11-17T03:15:02Z">
    <groups>
      <group name="adhoc">
        <method signature="A.method3()[pri:0, instance:testng.A@86be70a]" name="method3" class="testng.A"/>
      </group> <!-- adhoc -->
    </groups>
    <test name="Default test" duration-ms="125" started-at="2018-11-17T03:15:01Z" finished-at="2018-11-17T03:15:02Z">
      <class name="testng.A">
        <test-method status="PASS" signature="beforesuite()[pri:0, instance:testng.A@86be70a]" name="beforesuite" is-config="true" duration-ms="16" started-at="2018-11-17T03:15:01Z" finished-at="2018-11-17T03:15:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforesuite -->
        <test-method status="PASS" signature="beforetest()[pri:0, instance:testng.A@86be70a]" name="beforetest" is-config="true" duration-ms="0" started-at="2018-11-17T03:15:01Z" finished-at="2018-11-17T03:15:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="beforeclass()[pri:0, instance:testng.A@86be70a]" name="beforeclass" is-config="true" duration-ms="0" started-at="2018-11-17T03:15:01Z" finished-at="2018-11-17T03:15:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method status="PASS" signature="beforemethod()[pri:0, instance:testng.A@86be70a]" name="beforemethod" is-config="true" duration-ms="0" started-at="2018-11-17T03:15:01Z" finished-at="2018-11-17T03:15:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="FAIL" signature="method1()[pri:0, instance:testng.A@86be70a]" name="method1" duration-ms="15" started-at="2018-11-17T03:15:01Z" finished-at="2018-11-17T03:15:01Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertFalse(Assert.java:65)
at org.testng.Assert.assertFalse(Assert.java:75)
at testng.A.method1(A.java:61)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method1 -->
        <test-method status="PASS" signature="beforemethod()[pri:0, instance:testng.A@86be70a]" name="beforemethod" is-config="true" duration-ms="0" started-at="2018-11-17T03:15:01Z" finished-at="2018-11-17T03:15:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:testng.A@86be70a]" name="aftermethod" is-config="true" duration-ms="0" started-at="2018-11-17T03:15:01Z" finished-at="2018-11-17T03:15:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="method3()[pri:0, instance:testng.A@86be70a]" name="method3" duration-ms="0" started-at="2018-11-17T03:15:02Z" finished-at="2018-11-17T03:15:02Z">
          <reporter-output>
            <line>
              <![CDATA[method3]]>
            </line>
          </reporter-output>
        </test-method> <!-- method3 -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:testng.A@86be70a]" name="aftermethod" is-config="true" duration-ms="0" started-at="2018-11-17T03:15:02Z" finished-at="2018-11-17T03:15:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="SKIP" signature="method2()[pri:0, instance:testng.A@86be70a]" name="method2" duration-ms="0" started-at="2018-11-17T03:15:02Z" depends-on-methods="testng.A.method1" finished-at="2018-11-17T03:15:02Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method A.method2()[pri:0, instance:testng.A@86be70a] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method A.method2()[pri:0, instance:testng.A@86be70a] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:887)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method2 -->
        <test-method status="PASS" signature="aftertest()[pri:0, instance:testng.A@86be70a]" name="aftertest" is-config="true" duration-ms="0" started-at="2018-11-17T03:15:02Z" finished-at="2018-11-17T03:15:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
        <test-method status="PASS" signature="afterclass()[pri:0, instance:testng.A@86be70a]" name="afterclass" is-config="true" duration-ms="0" started-at="2018-11-17T03:15:02Z" finished-at="2018-11-17T03:15:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
        <test-method status="PASS" signature="aftersuite()[pri:0, instance:testng.A@86be70a]" name="aftersuite" is-config="true" duration-ms="0" started-at="2018-11-17T03:15:02Z" finished-at="2018-11-17T03:15:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuite -->
      </class> <!-- testng.A -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
